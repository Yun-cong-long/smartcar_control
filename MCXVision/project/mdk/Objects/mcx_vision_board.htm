<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mcx_vision_board.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mcx_vision_board.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sat May 31 14:31:17 2025
<BR><P>
<H3>Maximum Stack Usage =       1192 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ips200_init &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1]">Reset_Handler</a>
 <LI><a href="#[d7]">ADC0_DriverIRQHandler</a>
 <LI><a href="#[d8]">ADC1_DriverIRQHandler</a>
 <LI><a href="#[12f]">BSP32_DriverIRQHandler</a>
 <LI><a href="#[5]">BusFault_Handler</a>
 <LI><a href="#[e8]">CAN0_DriverIRQHandler</a>
 <LI><a href="#[e9]">CAN1_DriverIRQHandler</a>
 <LI><a href="#[107]">CDOG0_DriverIRQHandler</a>
 <LI><a href="#[108]">CDOG1_DriverIRQHandler</a>
 <LI><a href="#[144]">CMC0_DriverIRQHandler</a>
 <LI><a href="#[145]">CTI0_DriverIRQHandler</a>
 <LI><a href="#[114]">DAC0_DriverIRQHandler</a>
 <LI><a href="#[115]">DAC1_DriverIRQHandler</a>
 <LI><a href="#[116]">DAC2_DriverIRQHandler</a>
 <LI><a href="#[9]">DebugMon_Handler</a>
 <LI><a href="#[0]">DefaultISR</a>
 <LI><a href="#[f3]">ELS_DriverIRQHandler</a>
 <LI><a href="#[130]">ELS_ERR_DriverIRQHandler</a>
 <LI><a href="#[111]">EMVSIM0_DriverIRQHandler</a>
 <LI><a href="#[112]">EMVSIM1_DriverIRQHandler</a>
 <LI><a href="#[126]">ENC0_COMPARE_DriverIRQHandler</a>
 <LI><a href="#[127]">ENC0_HOME_DriverIRQHandler</a>
 <LI><a href="#[129]">ENC0_IDX_DriverIRQHandler</a>
 <LI><a href="#[128]">ENC0_WDG_SAB_DriverIRQHandler</a>
 <LI><a href="#[12a]">ENC1_COMPARE_DriverIRQHandler</a>
 <LI><a href="#[12b]">ENC1_HOME_DriverIRQHandler</a>
 <LI><a href="#[12d]">ENC1_IDX_DriverIRQHandler</a>
 <LI><a href="#[12c]">ENC1_WDG_SAB_DriverIRQHandler</a>
 <LI><a href="#[133]">ERM_MULTI_BIT_ERROR_DriverIRQHandler</a>
 <LI><a href="#[132]">ERM_SINGLE_BIT_ERROR_DriverIRQHandler</a>
 <LI><a href="#[13f]">ETB0_DriverIRQHandler</a>
 <LI><a href="#[135]">ETHERNET_DriverIRQHandler</a>
 <LI><a href="#[137]">ETHERNET_MACLP_DriverIRQHandler</a>
 <LI><a href="#[136]">ETHERNET_PMT_DriverIRQHandler</a>
 <LI><a href="#[10e]">EWM0_DriverIRQHandler</a>
 <LI><a href="#[11b]">FLEXPWM0_FAULT_DriverIRQHandler</a>
 <LI><a href="#[11a]">FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</a>
 <LI><a href="#[11c]">FLEXPWM0_SUBMODULE0_DriverIRQHandler</a>
 <LI><a href="#[11d]">FLEXPWM0_SUBMODULE1_DriverIRQHandler</a>
 <LI><a href="#[11e]">FLEXPWM0_SUBMODULE2_DriverIRQHandler</a>
 <LI><a href="#[11f]">FLEXPWM0_SUBMODULE3_DriverIRQHandler</a>
 <LI><a href="#[121]">FLEXPWM1_FAULT_DriverIRQHandler</a>
 <LI><a href="#[120]">FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</a>
 <LI><a href="#[122]">FLEXPWM1_SUBMODULE0_DriverIRQHandler</a>
 <LI><a href="#[123]">FLEXPWM1_SUBMODULE1_DriverIRQHandler</a>
 <LI><a href="#[124]">FLEXPWM1_SUBMODULE2_DriverIRQHandler</a>
 <LI><a href="#[125]">FLEXPWM1_SUBMODULE3_DriverIRQHandler</a>
 <LI><a href="#[e4]">FLEXSPI0_DriverIRQHandler</a>
 <LI><a href="#[134]">FMU0_DriverIRQHandler</a>
 <LI><a href="#[f1]">Freqme_DriverIRQHandler</a>
 <LI><a href="#[10c]">GDET_DriverIRQHandler</a>
 <LI><a href="#[bb]">GPIO00_DriverIRQHandler</a>
 <LI><a href="#[bc]">GPIO01_DriverIRQHandler</a>
 <LI><a href="#[bd]">GPIO10_DriverIRQHandler</a>
 <LI><a href="#[be]">GPIO11_DriverIRQHandler</a>
 <LI><a href="#[bf]">GPIO20_DriverIRQHandler</a>
 <LI><a href="#[c0]">GPIO21_DriverIRQHandler</a>
 <LI><a href="#[c1]">GPIO30_DriverIRQHandler</a>
 <LI><a href="#[c2]">GPIO31_DriverIRQHandler</a>
 <LI><a href="#[c3]">GPIO40_DriverIRQHandler</a>
 <LI><a href="#[c4]">GPIO41_DriverIRQHandler</a>
 <LI><a href="#[c5]">GPIO50_DriverIRQHandler</a>
 <LI><a href="#[c6]">GPIO51_DriverIRQHandler</a>
 <LI><a href="#[117]">HSCMP0_DriverIRQHandler</a>
 <LI><a href="#[118]">HSCMP1_DriverIRQHandler</a>
 <LI><a href="#[119]">HSCMP2_DriverIRQHandler</a>
 <LI><a href="#[109]">I3C0_DriverIRQHandler</a>
 <LI><a href="#[10a]">I3C1_DriverIRQHandler</a>
 <LI><a href="#[12e]">ITRC0_DriverIRQHandler</a>
 <LI><a href="#[139]">LPTMR0_DriverIRQHandler</a>
 <LI><a href="#[13a]">LPTMR1_DriverIRQHandler</a>
 <LI><a href="#[e0]">MAILBOX_DriverIRQHandler</a>
 <LI><a href="#[c8]">MRT0_DriverIRQHandler</a>
 <LI><a href="#[4]">MemManage_Handler</a>
 <LI><a href="#[10b]">NPU_DriverIRQHandler</a>
 <LI><a href="#[aa]">OR_DriverIRQHandler</a>
 <LI><a href="#[e3]">OS_EVENT_DriverIRQHandler</a>
 <LI><a href="#[da]">PDM_EVENT_DriverIRQHandler</a>
 <LI><a href="#[d9]">PINT0_DriverIRQHandler</a>
 <LI><a href="#[f4]">PKC_DriverIRQHandler</a>
 <LI><a href="#[131]">PKC_ERR_DriverIRQHandler</a>
 <LI><a href="#[13e]">PORT_EFT_DriverIRQHandler</a>
 <LI><a href="#[f6]">PQ_DriverIRQHandler</a>
 <LI><a href="#[f5]">PUF_DriverIRQHandler</a>
 <LI><a href="#[de]">RTC_DriverIRQHandler</a>
 <LI><a href="#[db]">Reserved65_DriverIRQHandler</a>
 <LI><a href="#[ea]">Reserved80_DriverIRQHandler</a>
 <LI><a href="#[eb]">Reserved81_DriverIRQHandler</a>
 <LI><a href="#[ef]">Reserved85_DriverIRQHandler</a>
 <LI><a href="#[e5]">SAI0_DriverIRQHandler</a>
 <LI><a href="#[e6]">SAI1_DriverIRQHandler</a>
 <LI><a href="#[13b]">SCG_DriverIRQHandler</a>
 <LI><a href="#[cb]">SCT0_DriverIRQHandler</a>
 <LI><a href="#[ee]">SEC_HYPERVISOR_CALL_DriverIRQHandler</a>
 <LI><a href="#[f2]">SEC_VIO_DriverIRQHandler</a>
 <LI><a href="#[138]">SINC_FILTER_DriverIRQHandler</a>
 <LI><a href="#[140]">SM3_DriverIRQHandler</a>
 <LI><a href="#[df]">SMARTDMA_DriverIRQHandler</a>
 <LI><a href="#[13c]">SPC_DriverIRQHandler</a>
 <LI><a href="#[7]">SecureFault_Handler</a>
 <LI><a href="#[141]">TRNG0_DriverIRQHandler</a>
 <LI><a href="#[10f]">TSI_END_OF_SCAN_DriverIRQHandler</a>
 <LI><a href="#[110]">TSI_OUT_OF_SCAN_DriverIRQHandler</a>
 <LI><a href="#[dd]">USB0_DCD_DriverIRQHandler</a>
 <LI><a href="#[dc]">USB0_FS_DriverIRQHandler</a>
 <LI><a href="#[ed]">USB1_HS_DriverIRQHandler</a>
 <LI><a href="#[ec]">USB1_HS_PHY_DriverIRQHandler</a>
 <LI><a href="#[c7]">UTICK0_DriverIRQHandler</a>
 <LI><a href="#[6]">UsageFault_Handler</a>
 <LI><a href="#[10d]">VBAT0_DriverIRQHandler</a>
 <LI><a href="#[13d]">WUU_DriverIRQHandler</a>
 <LI><a href="#[142]">WWDT0_DriverIRQHandler</a>
 <LI><a href="#[143]">WWDT1_DriverIRQHandler</a>
 <LI><a href="#[2]">NMI_Handler</a>
 <LI><a href="#[8]">SVC_Handler</a>
 <LI><a href="#[a]">PendSV_Handler</a>
 <LI><a href="#[b]">SysTick_Handler</a>
 <LI><a href="#[c]">OR_IRQHandler</a>
 <LI><a href="#[d]">EDMA_0_CH0_IRQHandler</a>
 <LI><a href="#[e]">EDMA_0_CH1_IRQHandler</a>
 <LI><a href="#[f]">EDMA_0_CH2_IRQHandler</a>
 <LI><a href="#[10]">EDMA_0_CH3_IRQHandler</a>
 <LI><a href="#[11]">EDMA_0_CH4_IRQHandler</a>
 <LI><a href="#[12]">EDMA_0_CH5_IRQHandler</a>
 <LI><a href="#[13]">EDMA_0_CH6_IRQHandler</a>
 <LI><a href="#[14]">EDMA_0_CH7_IRQHandler</a>
 <LI><a href="#[15]">EDMA_0_CH8_IRQHandler</a>
 <LI><a href="#[16]">EDMA_0_CH9_IRQHandler</a>
 <LI><a href="#[17]">EDMA_0_CH10_IRQHandler</a>
 <LI><a href="#[18]">EDMA_0_CH11_IRQHandler</a>
 <LI><a href="#[19]">EDMA_0_CH12_IRQHandler</a>
 <LI><a href="#[1a]">EDMA_0_CH13_IRQHandler</a>
 <LI><a href="#[1b]">EDMA_0_CH14_IRQHandler</a>
 <LI><a href="#[1c]">EDMA_0_CH15_IRQHandler</a>
 <LI><a href="#[29]">UTICK0_IRQHandler</a>
 <LI><a href="#[2a]">MRT0_IRQHandler</a>
 <LI><a href="#[2b]">CTIMER0_IRQHandler</a>
 <LI><a href="#[2c]">CTIMER1_IRQHandler</a>
 <LI><a href="#[2d]">SCT0_IRQHandler</a>
 <LI><a href="#[2e]">CTIMER2_IRQHandler</a>
 <LI><a href="#[2f]">LP_FLEXCOMM0_IRQHandler</a>
 <LI><a href="#[30]">LP_FLEXCOMM1_IRQHandler</a>
 <LI><a href="#[31]">LP_FLEXCOMM2_IRQHandler</a>
 <LI><a href="#[32]">LP_FLEXCOMM3_IRQHandler</a>
 <LI><a href="#[35]">LP_FLEXCOMM6_IRQHandler</a>
 <LI><a href="#[36]">LP_FLEXCOMM7_IRQHandler</a>
 <LI><a href="#[37]">LP_FLEXCOMM8_IRQHandler</a>
 <LI><a href="#[38]">LP_FLEXCOMM9_IRQHandler</a>
 <LI><a href="#[39]">ADC0_IRQHandler</a>
 <LI><a href="#[3a]">ADC1_IRQHandler</a>
 <LI><a href="#[3b]">PINT0_IRQHandler</a>
 <LI><a href="#[3c]">PDM_EVENT_IRQHandler</a>
 <LI><a href="#[3d]">Reserved65_IRQHandler</a>
 <LI><a href="#[3e]">USB0_FS_IRQHandler</a>
 <LI><a href="#[3f]">USB0_DCD_IRQHandler</a>
 <LI><a href="#[40]">RTC_IRQHandler</a>
 <LI><a href="#[42]">MAILBOX_IRQHandler</a>
 <LI><a href="#[43]">CTIMER3_IRQHandler</a>
 <LI><a href="#[44]">CTIMER4_IRQHandler</a>
 <LI><a href="#[45]">OS_EVENT_IRQHandler</a>
 <LI><a href="#[46]">FLEXSPI0_IRQHandler</a>
 <LI><a href="#[47]">SAI0_IRQHandler</a>
 <LI><a href="#[48]">SAI1_IRQHandler</a>
 <LI><a href="#[49]">USDHC0_IRQHandler</a>
 <LI><a href="#[4a]">CAN0_IRQHandler</a>
 <LI><a href="#[4b]">CAN1_IRQHandler</a>
 <LI><a href="#[4c]">Reserved80_IRQHandler</a>
 <LI><a href="#[4d]">Reserved81_IRQHandler</a>
 <LI><a href="#[4e]">USB1_HS_PHY_IRQHandler</a>
 <LI><a href="#[4f]">USB1_HS_IRQHandler</a>
 <LI><a href="#[50]">SEC_HYPERVISOR_CALL_IRQHandler</a>
 <LI><a href="#[51]">Reserved85_IRQHandler</a>
 <LI><a href="#[52]">PLU_IRQHandler</a>
 <LI><a href="#[53]">Freqme_IRQHandler</a>
 <LI><a href="#[54]">SEC_VIO_IRQHandler</a>
 <LI><a href="#[55]">ELS_IRQHandler</a>
 <LI><a href="#[56]">PKC_IRQHandler</a>
 <LI><a href="#[57]">PUF_IRQHandler</a>
 <LI><a href="#[58]">PQ_IRQHandler</a>
 <LI><a href="#[59]">EDMA_1_CH0_IRQHandler</a>
 <LI><a href="#[5a]">EDMA_1_CH1_IRQHandler</a>
 <LI><a href="#[5b]">EDMA_1_CH2_IRQHandler</a>
 <LI><a href="#[5c]">EDMA_1_CH3_IRQHandler</a>
 <LI><a href="#[5d]">EDMA_1_CH4_IRQHandler</a>
 <LI><a href="#[5e]">EDMA_1_CH5_IRQHandler</a>
 <LI><a href="#[5f]">EDMA_1_CH6_IRQHandler</a>
 <LI><a href="#[60]">EDMA_1_CH7_IRQHandler</a>
 <LI><a href="#[61]">EDMA_1_CH8_IRQHandler</a>
 <LI><a href="#[62]">EDMA_1_CH9_IRQHandler</a>
 <LI><a href="#[63]">EDMA_1_CH10_IRQHandler</a>
 <LI><a href="#[64]">EDMA_1_CH11_IRQHandler</a>
 <LI><a href="#[65]">EDMA_1_CH12_IRQHandler</a>
 <LI><a href="#[66]">EDMA_1_CH13_IRQHandler</a>
 <LI><a href="#[67]">EDMA_1_CH14_IRQHandler</a>
 <LI><a href="#[68]">EDMA_1_CH15_IRQHandler</a>
 <LI><a href="#[69]">CDOG0_IRQHandler</a>
 <LI><a href="#[6a]">CDOG1_IRQHandler</a>
 <LI><a href="#[6b]">I3C0_IRQHandler</a>
 <LI><a href="#[6c]">I3C1_IRQHandler</a>
 <LI><a href="#[6d]">NPU_IRQHandler</a>
 <LI><a href="#[6e]">GDET_IRQHandler</a>
 <LI><a href="#[6f]">VBAT0_IRQHandler</a>
 <LI><a href="#[70]">EWM0_IRQHandler</a>
 <LI><a href="#[71]">TSI_END_OF_SCAN_IRQHandler</a>
 <LI><a href="#[72]">TSI_OUT_OF_SCAN_IRQHandler</a>
 <LI><a href="#[73]">EMVSIM0_IRQHandler</a>
 <LI><a href="#[74]">EMVSIM1_IRQHandler</a>
 <LI><a href="#[75]">FLEXIO_IRQHandler</a>
 <LI><a href="#[76]">DAC0_IRQHandler</a>
 <LI><a href="#[77]">DAC1_IRQHandler</a>
 <LI><a href="#[78]">DAC2_IRQHandler</a>
 <LI><a href="#[79]">HSCMP0_IRQHandler</a>
 <LI><a href="#[7a]">HSCMP1_IRQHandler</a>
 <LI><a href="#[7b]">HSCMP2_IRQHandler</a>
 <LI><a href="#[7c]">FLEXPWM0_RELOAD_ERROR_IRQHandler</a>
 <LI><a href="#[7d]">FLEXPWM0_FAULT_IRQHandler</a>
 <LI><a href="#[7e]">FLEXPWM0_SUBMODULE0_IRQHandler</a>
 <LI><a href="#[7f]">FLEXPWM0_SUBMODULE1_IRQHandler</a>
 <LI><a href="#[80]">FLEXPWM0_SUBMODULE2_IRQHandler</a>
 <LI><a href="#[81]">FLEXPWM0_SUBMODULE3_IRQHandler</a>
 <LI><a href="#[82]">FLEXPWM1_RELOAD_ERROR_IRQHandler</a>
 <LI><a href="#[83]">FLEXPWM1_FAULT_IRQHandler</a>
 <LI><a href="#[84]">FLEXPWM1_SUBMODULE0_IRQHandler</a>
 <LI><a href="#[85]">FLEXPWM1_SUBMODULE1_IRQHandler</a>
 <LI><a href="#[86]">FLEXPWM1_SUBMODULE2_IRQHandler</a>
 <LI><a href="#[87]">FLEXPWM1_SUBMODULE3_IRQHandler</a>
 <LI><a href="#[88]">ENC0_COMPARE_IRQHandler</a>
 <LI><a href="#[89]">ENC0_HOME_IRQHandler</a>
 <LI><a href="#[8a]">ENC0_WDG_SAB_IRQHandler</a>
 <LI><a href="#[8b]">ENC0_IDX_IRQHandler</a>
 <LI><a href="#[8c]">ENC1_COMPARE_IRQHandler</a>
 <LI><a href="#[8d]">ENC1_HOME_IRQHandler</a>
 <LI><a href="#[8e]">ENC1_WDG_SAB_IRQHandler</a>
 <LI><a href="#[8f]">ENC1_IDX_IRQHandler</a>
 <LI><a href="#[90]">ITRC0_IRQHandler</a>
 <LI><a href="#[91]">BSP32_IRQHandler</a>
 <LI><a href="#[92]">ELS_ERR_IRQHandler</a>
 <LI><a href="#[93]">PKC_ERR_IRQHandler</a>
 <LI><a href="#[94]">ERM_SINGLE_BIT_ERROR_IRQHandler</a>
 <LI><a href="#[95]">ERM_MULTI_BIT_ERROR_IRQHandler</a>
 <LI><a href="#[96]">FMU0_IRQHandler</a>
 <LI><a href="#[97]">ETHERNET_IRQHandler</a>
 <LI><a href="#[98]">ETHERNET_PMT_IRQHandler</a>
 <LI><a href="#[99]">ETHERNET_MACLP_IRQHandler</a>
 <LI><a href="#[9a]">SINC_FILTER_IRQHandler</a>
 <LI><a href="#[9b]">LPTMR0_IRQHandler</a>
 <LI><a href="#[9c]">LPTMR1_IRQHandler</a>
 <LI><a href="#[9d]">SCG_IRQHandler</a>
 <LI><a href="#[9e]">SPC_IRQHandler</a>
 <LI><a href="#[9f]">WUU_IRQHandler</a>
 <LI><a href="#[a0]">PORT_EFT_IRQHandler</a>
 <LI><a href="#[a1]">ETB0_IRQHandler</a>
 <LI><a href="#[a2]">SM3_IRQHandler</a>
 <LI><a href="#[a3]">TRNG0_IRQHandler</a>
 <LI><a href="#[a4]">WWDT0_IRQHandler</a>
 <LI><a href="#[a5]">WWDT1_IRQHandler</a>
 <LI><a href="#[a6]">CMC0_IRQHandler</a>
 <LI><a href="#[a7]">CTI0_IRQHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b2]">LPUART_Deinit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b2]">LPUART_Deinit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d7]">ADC0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[39]">ADC0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d8]">ADC1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3a]">ADC1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12f]">BSP32_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[91]">BSP32_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e8]">CAN0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4a]">CAN0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e9]">CAN1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4b]">CAN1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[107]">CDOG0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[69]">CDOG0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[108]">CDOG1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6a]">CDOG1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[144]">CMC0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a6]">CMC0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[145]">CTI0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a7]">CTI0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c9]">CTIMER0_DriverIRQHandler</a> from fsl_ctimer.o(.text.CTIMER0_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2b]">CTIMER0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ca]">CTIMER1_DriverIRQHandler</a> from fsl_ctimer.o(.text.CTIMER1_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2c]">CTIMER1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[cc]">CTIMER2_DriverIRQHandler</a> from fsl_ctimer.o(.text.CTIMER2_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2e]">CTIMER2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e1]">CTIMER3_DriverIRQHandler</a> from fsl_ctimer.o(.text.CTIMER3_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[43]">CTIMER3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e2]">CTIMER4_DriverIRQHandler</a> from fsl_ctimer.o(.text.CTIMER4_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[44]">CTIMER4_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[114]">DAC0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[76]">DAC0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[115]">DAC1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[77]">DAC1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[116]">DAC2_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[78]">DAC2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[0]">DefaultISR</a> from startup_mcxn947_cm33_core0.o(.text) referenced 2 times from fsl_usdhc.o(.data.s_usdhcIsr)
 <LI><a href="#[ab]">EDMA_0_CH0_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH0_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[d]">EDMA_0_CH0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b5]">EDMA_0_CH10_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH10_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[17]">EDMA_0_CH10_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b6]">EDMA_0_CH11_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH11_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[18]">EDMA_0_CH11_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b7]">EDMA_0_CH12_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH12_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[19]">EDMA_0_CH12_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b8]">EDMA_0_CH13_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH13_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1a]">EDMA_0_CH13_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b9]">EDMA_0_CH14_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH14_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1b]">EDMA_0_CH14_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ba]">EDMA_0_CH15_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH15_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1c]">EDMA_0_CH15_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ac]">EDMA_0_CH1_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH1_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[e]">EDMA_0_CH1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ad]">EDMA_0_CH2_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH2_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[f]">EDMA_0_CH2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ae]">EDMA_0_CH3_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH3_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[10]">EDMA_0_CH3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[af]">EDMA_0_CH4_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH4_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[11]">EDMA_0_CH4_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b0]">EDMA_0_CH5_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH5_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[12]">EDMA_0_CH5_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b1]">EDMA_0_CH6_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH6_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[13]">EDMA_0_CH6_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b2]">EDMA_0_CH7_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH7_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[14]">EDMA_0_CH7_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b3]">EDMA_0_CH8_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH8_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[15]">EDMA_0_CH8_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b4]">EDMA_0_CH9_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_0_CH9_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[16]">EDMA_0_CH9_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f7]">EDMA_1_CH0_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH0_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[59]">EDMA_1_CH0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[101]">EDMA_1_CH10_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH10_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[63]">EDMA_1_CH10_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[102]">EDMA_1_CH11_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH11_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[64]">EDMA_1_CH11_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[103]">EDMA_1_CH12_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH12_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[65]">EDMA_1_CH12_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[104]">EDMA_1_CH13_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH13_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[66]">EDMA_1_CH13_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[105]">EDMA_1_CH14_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH14_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[67]">EDMA_1_CH14_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[106]">EDMA_1_CH15_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH15_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[68]">EDMA_1_CH15_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f8]">EDMA_1_CH1_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH1_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5a]">EDMA_1_CH1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f9]">EDMA_1_CH2_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH2_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5b]">EDMA_1_CH2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[fa]">EDMA_1_CH3_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH3_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5c]">EDMA_1_CH3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[fb]">EDMA_1_CH4_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH4_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5d]">EDMA_1_CH4_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[fc]">EDMA_1_CH5_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH5_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5e]">EDMA_1_CH5_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[fd]">EDMA_1_CH6_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH6_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[5f]">EDMA_1_CH6_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[fe]">EDMA_1_CH7_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH7_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[60]">EDMA_1_CH7_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ff]">EDMA_1_CH8_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH8_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[61]">EDMA_1_CH8_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[100]">EDMA_1_CH9_DriverIRQHandler</a> from fsl_edma_soc.o(.text.EDMA_1_CH9_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[62]">EDMA_1_CH9_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[146]">EDMA_LpspiMasterCallback</a> from fsl_lpspi_edma.o(.text.EDMA_LpspiMasterCallback) referenced 2 times from fsl_lpspi_edma.o(.text.LPSPI_MasterTransferEDMALite)
 <LI><a href="#[f3]">ELS_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[130]">ELS_ERR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[92]">ELS_ERR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[55]">ELS_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[111]">EMVSIM0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[73]">EMVSIM0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[112]">EMVSIM1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[74]">EMVSIM1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[126]">ENC0_COMPARE_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[88]">ENC0_COMPARE_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[127]">ENC0_HOME_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[89]">ENC0_HOME_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[129]">ENC0_IDX_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8b]">ENC0_IDX_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[128]">ENC0_WDG_SAB_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8a]">ENC0_WDG_SAB_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12a]">ENC1_COMPARE_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8c]">ENC1_COMPARE_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12b]">ENC1_HOME_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8d]">ENC1_HOME_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12d]">ENC1_IDX_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8f]">ENC1_IDX_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12c]">ENC1_WDG_SAB_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[8e]">ENC1_WDG_SAB_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[133]">ERM_MULTI_BIT_ERROR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[95]">ERM_MULTI_BIT_ERROR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[132]">ERM_SINGLE_BIT_ERROR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[94]">ERM_SINGLE_BIT_ERROR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13f]">ETB0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a1]">ETB0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[135]">ETHERNET_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[97]">ETHERNET_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[137]">ETHERNET_MACLP_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[99]">ETHERNET_MACLP_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[136]">ETHERNET_PMT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[98]">ETHERNET_PMT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[10e]">EWM0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[70]">EWM0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[113]">FLEXIO_DriverIRQHandler</a> from fsl_flexio.o(.text.FLEXIO_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[75]">FLEXIO_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11b]">FLEXPWM0_FAULT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7d]">FLEXPWM0_FAULT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11a]">FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7c]">FLEXPWM0_RELOAD_ERROR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11c]">FLEXPWM0_SUBMODULE0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7e]">FLEXPWM0_SUBMODULE0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11d]">FLEXPWM0_SUBMODULE1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7f]">FLEXPWM0_SUBMODULE1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11e]">FLEXPWM0_SUBMODULE2_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[80]">FLEXPWM0_SUBMODULE2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[11f]">FLEXPWM0_SUBMODULE3_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[81]">FLEXPWM0_SUBMODULE3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[121]">FLEXPWM1_FAULT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[83]">FLEXPWM1_FAULT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[120]">FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[82]">FLEXPWM1_RELOAD_ERROR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[122]">FLEXPWM1_SUBMODULE0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[84]">FLEXPWM1_SUBMODULE0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[123]">FLEXPWM1_SUBMODULE1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[85]">FLEXPWM1_SUBMODULE1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[124]">FLEXPWM1_SUBMODULE2_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[86]">FLEXPWM1_SUBMODULE2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[125]">FLEXPWM1_SUBMODULE3_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[87]">FLEXPWM1_SUBMODULE3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e4]">FLEXSPI0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[46]">FLEXSPI0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[134]">FMU0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[96]">FMU0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f1]">Freqme_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[53]">Freqme_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[10c]">GDET_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6e]">GDET_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[bb]">GPIO00_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1d]">GPIO00_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO00_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[bc]">GPIO01_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1e]">GPIO01_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO01_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[bd]">GPIO10_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[1f]">GPIO10_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO10_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[be]">GPIO11_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[20]">GPIO11_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO11_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[bf]">GPIO20_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[21]">GPIO20_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO20_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c0]">GPIO21_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[22]">GPIO21_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO21_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c1]">GPIO30_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[23]">GPIO30_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO30_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c2]">GPIO31_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[24]">GPIO31_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO31_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c3]">GPIO40_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[25]">GPIO40_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO40_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c4]">GPIO41_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[26]">GPIO41_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO41_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c5]">GPIO50_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[27]">GPIO50_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO50_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c6]">GPIO51_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[28]">GPIO51_IRQHandler</a> from fsl_adapter_gpio.o(.text.GPIO51_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[117]">HSCMP0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[79]">HSCMP0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[118]">HSCMP1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7a]">HSCMP1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[119]">HSCMP2_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7b]">HSCMP2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[3]">HardFault_Handler</a> from zf_board_init.o(.text.HardFault_Handler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[3]">HardFault_Handler</a> from zf_board_init.o(.text.HardFault_Handler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[109]">I3C0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6b]">I3C0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[10a]">I3C1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6c]">I3C1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[12e]">ITRC0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[90]">ITRC0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[149]">LPSPI_MasterUserCallback</a> from zf_device_ips200.o(.text.LPSPI_MasterUserCallback) referenced 2 times from zf_device_ips200.o(.text.ips200_init)
 <LI><a href="#[139]">LPTMR0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9b]">LPTMR0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13a]">LPTMR1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9c]">LPTMR1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[cd]">LP_FLEXCOMM0_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM0_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2f]">LP_FLEXCOMM0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ce]">LP_FLEXCOMM1_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM1_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[30]">LP_FLEXCOMM1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[cf]">LP_FLEXCOMM2_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM2_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[31]">LP_FLEXCOMM2_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d0]">LP_FLEXCOMM3_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM3_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[32]">LP_FLEXCOMM3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d1]">LP_FLEXCOMM4_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM4_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[33]">LP_FLEXCOMM4_IRQHandler</a> from zf_board_init.o(.text.LP_FLEXCOMM4_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d2]">LP_FLEXCOMM5_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM5_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[34]">LP_FLEXCOMM5_IRQHandler</a> from zf_driver_uart.o(.text.LP_FLEXCOMM5_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d3]">LP_FLEXCOMM6_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM6_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[35]">LP_FLEXCOMM6_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d4]">LP_FLEXCOMM7_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM7_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[36]">LP_FLEXCOMM7_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d5]">LP_FLEXCOMM8_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM8_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[37]">LP_FLEXCOMM8_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d6]">LP_FLEXCOMM9_DriverIRQHandler</a> from fsl_lpflexcomm.o(.text.LP_FLEXCOMM9_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[38]">LP_FLEXCOMM9_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e0]">MAILBOX_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[42]">MAILBOX_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c8]">MRT0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2a]">MRT0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[2]">NMI_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[2]">NMI_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[10b]">NPU_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6d]">NPU_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[aa]">OR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[c]">OR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e3]">OS_EVENT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[45]">OS_EVENT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[da]">PDM_EVENT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3c]">PDM_EVENT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[d9]">PINT0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3b]">PINT0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f4]">PKC_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[131]">PKC_ERR_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[93]">PKC_ERR_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[56]">PKC_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f0]">PLU_DriverIRQHandler</a> from zf_driver_ezh.o(.text.PLU_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[52]">PLU_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13e]">PORT_EFT_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a0]">PORT_EFT_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f6]">PQ_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[58]">PQ_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f5]">PUF_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[57]">PUF_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[de]">RTC_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[40]">RTC_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[db]">Reserved65_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3d]">Reserved65_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ea]">Reserved80_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4c]">Reserved80_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[eb]">Reserved81_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4d]">Reserved81_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ef]">Reserved85_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[51]">Reserved85_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[1]">Reset_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e5]">SAI0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[47]">SAI0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e6]">SAI1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[48]">SAI1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13b]">SCG_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9d]">SCG_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[cb]">SCT0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[2d]">SCT0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ee]">SEC_HYPERVISOR_CALL_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[50]">SEC_HYPERVISOR_CALL_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[f2]">SEC_VIO_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[54]">SEC_VIO_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[138]">SINC_FILTER_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9a]">SINC_FILTER_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[140]">SM3_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a2]">SM3_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[df]">SMARTDMA_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[41]">SMARTDMA_IRQHandler</a> from fsl_smartdma_mcxn.o(.text.SMARTDMA_IRQHandler) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13c]">SPC_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9e]">SPC_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[7]">SecureFault_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a8]">SystemInit</a> from system_mcxn947_cm33_core0.o(.text.SystemInit) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[141]">TRNG0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a3]">TRNG0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[10f]">TSI_END_OF_SCAN_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[71]">TSI_END_OF_SCAN_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[110]">TSI_OUT_OF_SCAN_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[72]">TSI_OUT_OF_SCAN_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[dd]">USB0_DCD_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3f]">USB0_DCD_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[dc]">USB0_FS_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[3e]">USB0_FS_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ed]">USB1_HS_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4f]">USB1_HS_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[ec]">USB1_HS_PHY_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[4e]">USB1_HS_PHY_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[e7]">USDHC0_DriverIRQHandler</a> from fsl_usdhc.o(.text.USDHC0_DriverIRQHandler) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[49]">USDHC0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[c7]">UTICK0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[29]">UTICK0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[10d]">VBAT0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[6f]">VBAT0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[13d]">WUU_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[9f]">WUU_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[142]">WWDT0_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a4]">WWDT0_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[143]">WWDT1_DriverIRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[a5]">WWDT1_IRQHandler</a> from startup_mcxn947_cm33_core0.o(.text) referenced from startup_mcxn947_cm33_core0.o(.isr_vector)
 <LI><a href="#[14a]">_GLOBAL__sub_I_zf_model_process.cpp</a> from zf_model_process.o(.text._GLOBAL__sub_I_zf_model_process.cpp) referenced from zf_model_process.o(.init_array)
 <LI><a href="#[147]">std::__2::vector&lang;yolo::object_detection::DetectionResult, std::__2::allocator&lang;yolo::object_detection::DetectionResult&rang;&rang;::~vector__sub_object[abi:v16000]()</a> from zf_model_process.o(.text._ZNSt3__26vectorIN4yolo16object_detection15DetectionResultENS_9allocatorIS3_EEED2B6v16000Ev) referenced 2 times from zf_model_process.o(.text._GLOBAL__sub_I_zf_model_process.cpp)
 <LI><a href="#[a9]">__main</a> from __main.o(!!!main) referenced from startup_mcxn947_cm33_core0.o(.text)
 <LI><a href="#[148]">ezh_camera_callback</a> from zf_driver_ezh.o(.text.ezh_camera_callback) referenced 2 times from zf_driver_ezh.o(.text.ezh_start)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a9]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[14c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[14e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[208]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[209]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[20a]"></a>__decompress</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[20b]"></a>__decompress0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[20c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[157]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[14f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[151]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit5.o(.ARM.Collect$$libinit$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[20d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[20e]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[20f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[210]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[211]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[212]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[153]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[213]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[214]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[215]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[216]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[217]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[218]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[219]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[21a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[21b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[21c]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[21d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[21e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[21f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[220]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[221]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[15c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[154]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[222]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[223]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[224]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[225]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[226]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[227]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[228]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[14d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[229]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[22a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[156]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[22b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[158]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ips200_init &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[22c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[175]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[15b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[22d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[15d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[d7]"></a>ADC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>ADC1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>BSP32_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[e8]"></a>CAN0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>CAN1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>CDOG0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[108]"></a>CDOG1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[144]"></a>CMC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[145]"></a>CTI0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>DAC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[115]"></a>DAC1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>DAC2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[0]"></a>DefaultISR</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_usdhc.o(.data.s_usdhcIsr)
</UL>
<P><STRONG><a name="[f3]"></a>ELS_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[130]"></a>ELS_ERR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>EMVSIM0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>EMVSIM1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>ENC0_COMPARE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[127]"></a>ENC0_HOME_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>ENC0_IDX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[128]"></a>ENC0_WDG_SAB_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12a]"></a>ENC1_COMPARE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12b]"></a>ENC1_HOME_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>ENC1_IDX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12c]"></a>ENC1_WDG_SAB_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>ERM_MULTI_BIT_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[132]"></a>ERM_SINGLE_BIT_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13f]"></a>ETB0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[135]"></a>ETHERNET_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[137]"></a>ETHERNET_MACLP_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[136]"></a>ETHERNET_PMT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>EWM0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11b]"></a>FLEXPWM0_FAULT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11a]"></a>FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11c]"></a>FLEXPWM0_SUBMODULE0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11d]"></a>FLEXPWM0_SUBMODULE1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11e]"></a>FLEXPWM0_SUBMODULE2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[11f]"></a>FLEXPWM0_SUBMODULE3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>FLEXPWM1_FAULT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>FLEXPWM1_SUBMODULE0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[123]"></a>FLEXPWM1_SUBMODULE1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>FLEXPWM1_SUBMODULE2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>FLEXPWM1_SUBMODULE3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>FLEXSPI0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[134]"></a>FMU0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>Freqme_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[10c]"></a>GDET_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>GPIO00_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>GPIO01_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>GPIO10_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>GPIO11_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>GPIO20_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>GPIO21_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>GPIO30_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>GPIO31_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>GPIO40_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>GPIO41_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>GPIO50_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>GPIO51_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>HSCMP0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[118]"></a>HSCMP1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[119]"></a>HSCMP2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>I3C0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[10a]"></a>I3C1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>ITRC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[139]"></a>LPTMR0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13a]"></a>LPTMR1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>MAILBOX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>MRT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[10b]"></a>NPU_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>OR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>OS_EVENT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>PDM_EVENT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>PINT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>PKC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>PKC_ERR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>PORT_EFT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>PQ_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>PUF_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>RTC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>Reserved65_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>Reserved80_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>Reserved81_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>Reserved85_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>SAI0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>SAI1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13b]"></a>SCG_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>SCT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>SEC_HYPERVISOR_CALL_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>SEC_VIO_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[138]"></a>SINC_FILTER_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[140]"></a>SM3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>SMARTDMA_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>SPC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>SecureFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[141]"></a>TRNG0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>TSI_END_OF_SCAN_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>TSI_OUT_OF_SCAN_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>USB0_DCD_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>USB0_FS_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>USB1_HS_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>USB1_HS_PHY_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>UTICK0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[10d]"></a>VBAT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[13d]"></a>WUU_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>WWDT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>WWDT1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
<LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
<LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
<LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
<LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[c]"></a>OR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[d]"></a>EDMA_0_CH0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[e]"></a>EDMA_0_CH1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[f]"></a>EDMA_0_CH2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[10]"></a>EDMA_0_CH3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[11]"></a>EDMA_0_CH4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[12]"></a>EDMA_0_CH5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[13]"></a>EDMA_0_CH6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[14]"></a>EDMA_0_CH7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[15]"></a>EDMA_0_CH8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[16]"></a>EDMA_0_CH9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[17]"></a>EDMA_0_CH10_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[18]"></a>EDMA_0_CH11_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[19]"></a>EDMA_0_CH12_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1a]"></a>EDMA_0_CH13_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1b]"></a>EDMA_0_CH14_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c]"></a>EDMA_0_CH15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[29]"></a>UTICK0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2a]"></a>MRT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2b]"></a>CTIMER0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2c]"></a>CTIMER1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2d]"></a>SCT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2e]"></a>CTIMER2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[2f]"></a>LP_FLEXCOMM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[30]"></a>LP_FLEXCOMM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[31]"></a>LP_FLEXCOMM2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[32]"></a>LP_FLEXCOMM3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[35]"></a>LP_FLEXCOMM6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[36]"></a>LP_FLEXCOMM7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[37]"></a>LP_FLEXCOMM8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[38]"></a>LP_FLEXCOMM9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[39]"></a>ADC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3a]"></a>ADC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3b]"></a>PINT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3c]"></a>PDM_EVENT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3d]"></a>Reserved65_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3e]"></a>USB0_FS_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[3f]"></a>USB0_DCD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[40]"></a>RTC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[42]"></a>MAILBOX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[43]"></a>CTIMER3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[44]"></a>CTIMER4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[45]"></a>OS_EVENT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[46]"></a>FLEXSPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[47]"></a>SAI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[48]"></a>SAI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[49]"></a>USDHC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4c]"></a>Reserved80_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4d]"></a>Reserved81_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4e]"></a>USB1_HS_PHY_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[4f]"></a>USB1_HS_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[50]"></a>SEC_HYPERVISOR_CALL_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[51]"></a>Reserved85_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[52]"></a>PLU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[53]"></a>Freqme_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[54]"></a>SEC_VIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[55]"></a>ELS_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[56]"></a>PKC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[57]"></a>PUF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[58]"></a>PQ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[59]"></a>EDMA_1_CH0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5a]"></a>EDMA_1_CH1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5b]"></a>EDMA_1_CH2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5c]"></a>EDMA_1_CH3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5d]"></a>EDMA_1_CH4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5e]"></a>EDMA_1_CH5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[5f]"></a>EDMA_1_CH6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[60]"></a>EDMA_1_CH7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[61]"></a>EDMA_1_CH8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[62]"></a>EDMA_1_CH9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[63]"></a>EDMA_1_CH10_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[64]"></a>EDMA_1_CH11_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[65]"></a>EDMA_1_CH12_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[66]"></a>EDMA_1_CH13_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[67]"></a>EDMA_1_CH14_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[68]"></a>EDMA_1_CH15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[69]"></a>CDOG0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6a]"></a>CDOG1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6b]"></a>I3C0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6c]"></a>I3C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6d]"></a>NPU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6e]"></a>GDET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[6f]"></a>VBAT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[70]"></a>EWM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[71]"></a>TSI_END_OF_SCAN_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[72]"></a>TSI_OUT_OF_SCAN_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[73]"></a>EMVSIM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[74]"></a>EMVSIM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[75]"></a>FLEXIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[76]"></a>DAC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[77]"></a>DAC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[78]"></a>DAC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[79]"></a>HSCMP0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7a]"></a>HSCMP1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7b]"></a>HSCMP2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7c]"></a>FLEXPWM0_RELOAD_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7d]"></a>FLEXPWM0_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7e]"></a>FLEXPWM0_SUBMODULE0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[7f]"></a>FLEXPWM0_SUBMODULE1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[80]"></a>FLEXPWM0_SUBMODULE2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[81]"></a>FLEXPWM0_SUBMODULE3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[82]"></a>FLEXPWM1_RELOAD_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[83]"></a>FLEXPWM1_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[84]"></a>FLEXPWM1_SUBMODULE0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[85]"></a>FLEXPWM1_SUBMODULE1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[86]"></a>FLEXPWM1_SUBMODULE2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[87]"></a>FLEXPWM1_SUBMODULE3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[88]"></a>ENC0_COMPARE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[89]"></a>ENC0_HOME_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8a]"></a>ENC0_WDG_SAB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8b]"></a>ENC0_IDX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8c]"></a>ENC1_COMPARE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8d]"></a>ENC1_HOME_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8e]"></a>ENC1_WDG_SAB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[8f]"></a>ENC1_IDX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[90]"></a>ITRC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[91]"></a>BSP32_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[92]"></a>ELS_ERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[93]"></a>PKC_ERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[94]"></a>ERM_SINGLE_BIT_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[95]"></a>ERM_MULTI_BIT_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[96]"></a>FMU0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[97]"></a>ETHERNET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[98]"></a>ETHERNET_PMT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[99]"></a>ETHERNET_MACLP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9a]"></a>SINC_FILTER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9b]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9c]"></a>LPTMR1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9d]"></a>SCG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9e]"></a>SPC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[9f]"></a>WUU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a0]"></a>PORT_EFT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a1]"></a>ETB0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a2]"></a>SM3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a3]"></a>TRNG0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a4]"></a>WWDT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a5]"></a>WWDT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a6]"></a>CMC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[a7]"></a>CTI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_mcxn947_cm33_core0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[15f]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[162]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterSetDelayTimes
</UL>

<P><STRONG><a name="[22e]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_zf_model_process.cpp
</UL>

<P><STRONG><a name="[18b]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
</UL>

<P><STRONG><a name="[165]"></a>memcpy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_Init
</UL>

<P><STRONG><a name="[167]"></a>memset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferCreateHandleEDMA
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_CreateHandle
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterGetDefaultConfig
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_GetDefaultConfig
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_GetDefaultConfig
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[1af]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[22f]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[14b]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[15e]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[160]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[231]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[16a]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[152]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[16c]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[235]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[166]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>

<P><STRONG><a name="[16e]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[236]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[237]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>

<P><STRONG><a name="[23c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[169]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[23f]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>_fp_trap</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, _fptrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL>

<P><STRONG><a name="[155]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[173]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[16b]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[15a]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[176]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE_inner
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[172]"></a>__rt_SIGFPE</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_fpe_outer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE_inner
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap
</UL>

<P><STRONG><a name="[174]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[177]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[178]"></a>__rt_SIGFPE_inner</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, defsig_fpe_inner.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGFPE
</UL>

<P><STRONG><a name="[179]"></a>BOARD_BootClockPLL150M</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, clock_config.o(.text.BOARD_BootClockPLL150M))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BOARD_BootClockPLL150M &rArr; SPC_SetActiveModeCoreLDORegulatorConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPll0MonitorMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPLL0Freq
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetupFROHFClocking
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetActiveModeCoreLDORegulatorConfig
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetFLASHAccessCyclesForFreq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetSRAMOperateVoltage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetActiveModeDCDCRegulatorConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
</UL>

<P><STRONG><a name="[183]"></a>BOARD_InitBootClocks</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clock_config.o(.text.BOARD_InitBootClocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BOARD_InitBootClocks &rArr; BOARD_BootClockPLL150M &rArr; SPC_SetActiveModeCoreLDORegulatorConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
</UL>

<P><STRONG><a name="[184]"></a>BOARD_PowerMode_OD</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, board.o(.text.BOARD_PowerMode_OD))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BOARD_PowerMode_OD &rArr; SPC_SetSRAMOperateVoltage &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetSRAMOperateVoltage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetActiveModeDCDCRegulatorConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
</UL>

<P><STRONG><a name="[17a]"></a>CLOCK_AttachClk</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, fsl_clock.o(.text.CLOCK_AttachClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[185]"></a>CLOCK_GetLPFlexCommClkFreq</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, fsl_clock.o(.text.CLOCK_GetLPFlexCommClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CLOCK_GetLPFlexCommClkFreq &rArr; CLOCK_GetPll1OutFreq &rArr; __aeabi_f2ulz
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPll1OutFreq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPll0OutFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[186]"></a>CLOCK_GetPll0OutFreq</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, fsl_clock.o(.text.CLOCK_GetPll0OutFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CLOCK_GetPll0OutFreq &rArr; __aeabi_f2ulz
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetLPFlexCommClkFreq
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPLL0Freq
</UL>

<P><STRONG><a name="[187]"></a>CLOCK_GetPll1OutFreq</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, fsl_clock.o(.text.CLOCK_GetPll1OutFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CLOCK_GetPll1OutFreq &rArr; __aeabi_f2ulz
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetLPFlexCommClkFreq
</UL>

<P><STRONG><a name="[182]"></a>CLOCK_SetClkDiv</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetClkDiv))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[17b]"></a>CLOCK_SetFLASHAccessCyclesForFreq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>

<P><STRONG><a name="[180]"></a>CLOCK_SetPLL0Freq</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_SetPLL0Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLOCK_SetPLL0Freq &rArr; CLOCK_GetPll0OutFreq &rArr; __aeabi_f2ulz
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPll0OutFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>

<P><STRONG><a name="[181]"></a>CLOCK_SetPll0MonitorMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetPll0MonitorMode))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>

<P><STRONG><a name="[1e9]"></a>CLOCK_SetupClk16KClocking</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetupClk16KClocking))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_init
</UL>

<P><STRONG><a name="[17f]"></a>CLOCK_SetupFROHFClocking</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetupFROHFClocking))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>

<P><STRONG><a name="[c9]"></a>CTIMER0_DriverIRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, fsl_ctimer.o(.text.CTIMER0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CTIMER0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>CTIMER1_DriverIRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, fsl_ctimer.o(.text.CTIMER1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CTIMER1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>CTIMER2_DriverIRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, fsl_ctimer.o(.text.CTIMER2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CTIMER2_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>CTIMER3_DriverIRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, fsl_ctimer.o(.text.CTIMER3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CTIMER3_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>CTIMER4_DriverIRQHandler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, fsl_ctimer.o(.text.CTIMER4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CTIMER4_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[189]"></a>DbgConsole_Printf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, fsl_debug_console.o(.text.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[18a]"></a>DbgConsole_Vprintf</STRONG> (Thumb, 1038 bytes, Stack size 104 bytes, fsl_debug_console.o(.text.DbgConsole_Vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[ab]"></a>EDMA_0_CH0_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH0_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>EDMA_0_CH10_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH10_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH10_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>EDMA_0_CH11_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH11_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH11_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>EDMA_0_CH12_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH12_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH12_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>EDMA_0_CH13_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH13_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH13_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>EDMA_0_CH14_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH14_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH14_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>EDMA_0_CH15_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH15_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH15_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>EDMA_0_CH1_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH1_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>EDMA_0_CH2_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH2_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>EDMA_0_CH3_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH3_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>EDMA_0_CH4_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH4_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>EDMA_0_CH5_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH5_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>EDMA_0_CH6_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH6_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>EDMA_0_CH7_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH7_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>EDMA_0_CH8_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH8_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>EDMA_0_CH9_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_0_CH9_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_0_CH9_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>EDMA_1_CH0_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH0_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>EDMA_1_CH10_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH10_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH10_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>EDMA_1_CH11_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH11_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH11_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[103]"></a>EDMA_1_CH12_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH12_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH12_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>EDMA_1_CH13_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH13_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH13_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>EDMA_1_CH14_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH14_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH14_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>EDMA_1_CH15_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH15_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH15_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>EDMA_1_CH1_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH1_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>EDMA_1_CH2_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH2_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>EDMA_1_CH3_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH3_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>EDMA_1_CH4_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH4_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>EDMA_1_CH5_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH5_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>EDMA_1_CH6_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH6_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>EDMA_1_CH7_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH7_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>EDMA_1_CH8_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH8_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>EDMA_1_CH9_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_edma_soc.o(.text.EDMA_1_CH9_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_1_CH9_DriverIRQHandler &rArr; EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[18d]"></a>EDMA_ConfigChannelSoftwareTCD</STRONG> (Thumb, 598 bytes, Stack size 32 bytes, fsl_edma.o(.text.EDMA_ConfigChannelSoftwareTCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_TcdSetTransferConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_SetTransferConfig
</UL>

<P><STRONG><a name="[18f]"></a>EDMA_CreateHandle</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, fsl_edma.o(.text.EDMA_CreateHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EDMA_CreateHandle &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[18c]"></a>EDMA_DriverIRQHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fsl_edma.o(.text.EDMA_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_DriverIRQHandler &rArr; EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_HandleIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH15_DriverIRQHandler
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH14_DriverIRQHandler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH13_DriverIRQHandler
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH12_DriverIRQHandler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH11_DriverIRQHandler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH10_DriverIRQHandler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH9_DriverIRQHandler
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH8_DriverIRQHandler
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH7_DriverIRQHandler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH6_DriverIRQHandler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH5_DriverIRQHandler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH4_DriverIRQHandler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH3_DriverIRQHandler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH2_DriverIRQHandler
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH1_DriverIRQHandler
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_1_CH0_DriverIRQHandler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH15_DriverIRQHandler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH14_DriverIRQHandler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH13_DriverIRQHandler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH12_DriverIRQHandler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH11_DriverIRQHandler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH10_DriverIRQHandler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH9_DriverIRQHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH8_DriverIRQHandler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH7_DriverIRQHandler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH6_DriverIRQHandler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH5_DriverIRQHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH4_DriverIRQHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH3_DriverIRQHandler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH2_DriverIRQHandler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH1_DriverIRQHandler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_0_CH0_DriverIRQHandler
</UL>

<P><STRONG><a name="[191]"></a>EDMA_EnableChannelInterrupts</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, fsl_edma.o(.text.EDMA_EnableChannelInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = EDMA_EnableChannelInterrupts &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[192]"></a>EDMA_GetDefaultConfig</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, fsl_edma.o(.text.EDMA_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[190]"></a>EDMA_HandleIRQ</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, fsl_edma.o(.text.EDMA_HandleIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDMA_HandleIRQ &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_DriverIRQHandler
</UL>

<P><STRONG><a name="[193]"></a>EDMA_Init</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, fsl_edma.o(.text.EDMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EDMA_Init &rArr; EDMA_InitChannel &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_InitChannel
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[195]"></a>EDMA_InitChannel</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, fsl_edma.o(.text.EDMA_InitChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = EDMA_InitChannel &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_Init
</UL>

<P><STRONG><a name="[196]"></a>EDMA_ResetChannel</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, fsl_edma.o(.text.EDMA_ResetChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EDMA_ResetChannel &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[197]"></a>EDMA_SetCallback</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_edma.o(.text.EDMA_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EDMA_SetCallback &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[198]"></a>EDMA_SetTransferConfig</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, fsl_edma.o(.text.EDMA_SetTransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDMA_SetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_ConfigChannelSoftwareTCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[199]"></a>EDMA_StartTransfer</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, fsl_edma.o(.text.EDMA_StartTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EDMA_StartTransfer &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[19a]"></a>EDMA_TcdReset</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, fsl_edma.o(.text.EDMA_TcdReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EDMA_TcdReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[19b]"></a>EDMA_TcdSetTransferConfig</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, fsl_edma.o(.text.EDMA_TcdSetTransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_ConfigChannelSoftwareTCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[113]"></a>FLEXIO_DriverIRQHandler</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fsl_flexio.o(.text.FLEXIO_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLEXIO_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>GPIO00_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO00_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO00_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1e]"></a>GPIO01_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO01_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO01_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1f]"></a>GPIO10_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO10_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[20]"></a>GPIO11_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO11_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO11_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[21]"></a>GPIO20_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO20_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO20_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[22]"></a>GPIO21_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO21_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO21_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[23]"></a>GPIO30_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO30_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO30_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[24]"></a>GPIO31_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO31_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO31_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[25]"></a>GPIO40_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO40_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO40_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[26]"></a>GPIO41_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO41_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO41_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[27]"></a>GPIO50_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO50_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO50_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[28]"></a>GPIO51_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_adapter_gpio.o(.text.GPIO51_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO51_IRQHandler &rArr; HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[19f]"></a>GPIO_GpioClearInterruptFlags</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_GpioClearInterruptFlags))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>

<P><STRONG><a name="[19e]"></a>GPIO_GpioGetInterruptFlags</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_GpioGetInterruptFlags))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GpioInterruptHandle
</UL>

<P><STRONG><a name="[19d]"></a>GPIO_PinInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GPIO_PinInit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_board_init.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle_level
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
<LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c9]"></a>INPUTMUX_AttachSignal</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_inputmux.o(.text.INPUTMUX_AttachSignal))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
</UL>

<P><STRONG><a name="[1ca]"></a>INPUTMUX_Deinit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_inputmux.o(.text.INPUTMUX_Deinit))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
</UL>

<P><STRONG><a name="[1a2]"></a>INPUTMUX_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_inputmux.o(.text.INPUTMUX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = INPUTMUX_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
</UL>

<P><STRONG><a name="[1a3]"></a>LPSPI_CheckTransferArgument</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, fsl_lpspi.o(.text.LPSPI_CheckTransferArgument))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LPSPI_CheckTransferArgument &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
</UL>

<P><STRONG><a name="[1a4]"></a>LPSPI_GetInstance</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fsl_lpspi.o(.text.LPSPI_GetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LPSPI_GetInstance &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferCreateHandleEDMA
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferPrepareEDMALite
</UL>

<P><STRONG><a name="[1a5]"></a>LPSPI_MasterGetDefaultConfig</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, fsl_lpspi.o(.text.LPSPI_MasterGetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LPSPI_MasterGetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[1a6]"></a>LPSPI_MasterInit</STRONG> (Thumb, 844 bytes, Stack size 40 bytes, fsl_lpspi.o(.text.LPSPI_MasterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPSPI_MasterInit &rArr; LPSPI_MasterSetDelayTimes &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterSetDelayTimes
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_GetBaseAddress
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[1a9]"></a>LPSPI_MasterSetDelayTimes</STRONG> (Thumb, 416 bytes, Stack size 48 bytes, fsl_lpspi.o(.text.LPSPI_MasterSetDelayTimes))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LPSPI_MasterSetDelayTimes &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
</UL>

<P><STRONG><a name="[1ab]"></a>LPSPI_MasterTransferCreateHandleEDMA</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, fsl_lpspi_edma.o(.text.LPSPI_MasterTransferCreateHandleEDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LPSPI_MasterTransferCreateHandleEDMA &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_GetInstance
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[1ac]"></a>LPSPI_MasterTransferEDMA</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, fsl_lpspi_edma.o(.text.LPSPI_MasterTransferEDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferPrepareEDMALite
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_set_region
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_draw_line
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_show_scc8660
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[1ae]"></a>LPSPI_MasterTransferEDMALite</STRONG> (Thumb, 914 bytes, Stack size 176 bytes, fsl_lpspi_edma.o(.text.LPSPI_MasterTransferEDMALite))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_CheckTransferArgument
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_GetInstance
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_StartTransfer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_SetCallback
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_EnableChannelInterrupts
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_TcdSetTransferConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_SetTransferConfig
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_TcdReset
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_ResetChannel
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
</UL>

<P><STRONG><a name="[1ad]"></a>LPSPI_MasterTransferPrepareEDMALite</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, fsl_lpspi_edma.o(.text.LPSPI_MasterTransferPrepareEDMALite))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LPSPI_MasterTransferPrepareEDMALite &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
</UL>

<P><STRONG><a name="[149]"></a>LPSPI_MasterUserCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_device_ips200.o(.text.LPSPI_MasterUserCallback))
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips200.o(.text.ips200_init)
</UL>
<P><STRONG><a name="[1ea]"></a>LPTMR_Deinit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_lptmr.o(.text.LPTMR_Deinit))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_init
</UL>

<P><STRONG><a name="[1b0]"></a>LPTMR_GetDefaultConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fsl_lptmr.o(.text.LPTMR_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LPTMR_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_init
</UL>

<P><STRONG><a name="[1b1]"></a>LPTMR_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, fsl_lptmr.o(.text.LPTMR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LPTMR_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_init
</UL>

<P><STRONG><a name="[1b9]"></a>LPUART_ClearStatusFlags</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, fsl_lpuart.o(.text.LPUART_ClearStatusFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM5_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM4_IRQHandler
</UL>

<P><STRONG><a name="[1b2]"></a>LPUART_Deinit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_Deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + In Cycle
<LI>Call Chain = LPUART_Deinit &rArr;  LPUART_Deinit (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[1c5]"></a>LPUART_EnableInterrupts</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_EnableInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[1b4]"></a>LPUART_GetDefaultConfig</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, fsl_lpuart.o(.text.LPUART_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LPUART_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[1b7]"></a>LPUART_GetStatusFlags</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_GetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM5_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM4_IRQHandler
</UL>

<P><STRONG><a name="[1b5]"></a>LPUART_Init</STRONG> (Thumb, 796 bytes, Stack size 40 bytes, fsl_lpuart.o(.text.LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LPUART_Init &rArr; LP_FLEXCOMM_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
</UL>

<P><STRONG><a name="[1b6]"></a>LPUART_WriteBlocking</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
</UL>

<P><STRONG><a name="[cd]"></a>LP_FLEXCOMM0_DriverIRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>LP_FLEXCOMM1_DriverIRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>LP_FLEXCOMM2_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM2_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>LP_FLEXCOMM3_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM3_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>LP_FLEXCOMM4_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM4_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>LP_FLEXCOMM4_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, zf_board_init.o(.text.LP_FLEXCOMM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LP_FLEXCOMM4_IRQHandler &rArr; zf_debug_uart_callback &rArr; zf_debug_printf &rArr; LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[d2]"></a>LP_FLEXCOMM5_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM5_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>LP_FLEXCOMM5_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, zf_driver_uart.o(.text.LP_FLEXCOMM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM5_IRQHandler &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[d3]"></a>LP_FLEXCOMM6_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM6_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>LP_FLEXCOMM7_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM7_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>LP_FLEXCOMM8_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM8_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>LP_FLEXCOMM9_DriverIRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM9_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LP_FLEXCOMM9_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[1b3]"></a>LP_FLEXCOMM_Deinit</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM_Deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LP_FLEXCOMM_Deinit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_SetPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
</UL>

<P><STRONG><a name="[1a7]"></a>LP_FLEXCOMM_GetBaseAddress</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM_GetBaseAddress))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
</UL>

<P><STRONG><a name="[1a8]"></a>LP_FLEXCOMM_Init</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, fsl_lpflexcomm.o(.text.LP_FLEXCOMM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LP_FLEXCOMM_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[f0]"></a>PLU_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, zf_driver_ezh.o(.text.PLU_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PLU_DriverIRQHandler &rArr; ezh_camera_display_callback &rArr; ezh_copy_slice_to_model_input &rArr; rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char) &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_camera_display_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[194]"></a>RESET_ClearPeripheralReset</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, fsl_reset.o(.text.RESET_ClearPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RESET_ClearPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUTMUX_Init
</UL>

<P><STRONG><a name="[1bc]"></a>RESET_PeripheralReset</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, fsl_reset.o(.text.RESET_PeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_Init
</UL>

<P><STRONG><a name="[1ba]"></a>RESET_SetPeripheralReset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_reset.o(.text.RESET_SetPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RESET_SetPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Deinit
</UL>

<P><STRONG><a name="[1c7]"></a>SMARTDMA_Boot</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fsl_smartdma.o(.text.SMARTDMA_Boot))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_camera_display_callback
</UL>

<P><STRONG><a name="[1bd]"></a>SMARTDMA_HandleIRQ</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_smartdma.o(.text.SMARTDMA_HandleIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>SMARTDMA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsl_smartdma_mcxn.o(.text.SMARTDMA_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_HandleIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.isr_vector)
</UL>
<P><STRONG><a name="[1be]"></a>SMARTDMA_Init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, fsl_smartdma.o(.text.SMARTDMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SMARTDMA_Init &rArr; RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
</UL>

<P><STRONG><a name="[1cb]"></a>SMARTDMA_InstallCallback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fsl_smartdma.o(.text.SMARTDMA_InstallCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
</UL>

<P><STRONG><a name="[17d]"></a>SPC_SetActiveModeCoreLDORegulatorConfig</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, fsl_spc.o(.text.SPC_SetActiveModeCoreLDORegulatorConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SPC_SetActiveModeCoreLDORegulatorConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
</UL>

<P><STRONG><a name="[17c]"></a>SPC_SetActiveModeDCDCRegulatorConfig</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, fsl_spc.o(.text.SPC_SetActiveModeDCDCRegulatorConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SPC_SetActiveModeDCDCRegulatorConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_PowerMode_OD
</UL>

<P><STRONG><a name="[17e]"></a>SPC_SetSRAMOperateVoltage</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, fsl_spc.o(.text.SPC_SetSRAMOperateVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SPC_SetSRAMOperateVoltage &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockPLL150M
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_PowerMode_OD
</UL>

<P><STRONG><a name="[a8]"></a>SystemInit</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, system_mcxn947_cm33_core0.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[240]"></a>SystemInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mcxn947_cm33_core0.o(.text.SystemInitHook), UNUSED)

<P><STRONG><a name="[e7]"></a>USDHC0_DriverIRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_usdhc.o(.text.USDHC0_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mcxn947_cm33_core0.o(.text)
</UL>
<P><STRONG><a name="[1bf]"></a>rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char)</STRONG> (Thumb, 268 bytes, Stack size 72 bytes, zf_model_process.o(.text._Z21rgb565stridedtorgb888PKtiiiiiPhih))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char) &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_copy_slice_to_model_input
</UL>

<P><STRONG><a name="[147]"></a>std::__2::vector&lang;yolo::object_detection::DetectionResult, std::__2::allocator&lang;yolo::object_detection::DetectionResult&rang;&rang;::~vector__sub_object[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, zf_model_process.o(.text._ZNSt3__26vectorIN4yolo16object_detection15DetectionResultENS_9allocatorIS3_EEED2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::vector&lang;yolo::object_detection::DetectionResult, std::__2::allocator&lang;yolo::object_detection::DetectionResult&rang;&rang;::~vector__sub_object[abi:v16000]() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_model_process.o(.text._GLOBAL__sub_I_zf_model_process.cpp)
</UL>
<P><STRONG><a name="[1c0]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;yolo::object_detection::DetectionResult, std::__2::allocator&lang;yolo::object_detection::DetectionResult&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[18e]"></a>__aeabi_assert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_assert.o(.text.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferCreateHandleEDMA
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_CreateHandle
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterGetDefaultConfig
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_GetDefaultConfig
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_GetDefaultConfig
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetActiveModeCoreLDORegulatorConfig
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetSRAMOperateVoltage
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPC_SetActiveModeDCDCRegulatorConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMALite
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferPrepareEDMALite
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_LpspiMasterCallback
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_CheckTransferArgument
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterSetDelayTimes
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_GetInstance
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_SetPeripheralReset
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Deinit
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUTMUX_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_HandleIRQ
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_StartTransfer
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_SetCallback
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_EnableChannelInterrupts
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_TcdSetTransferConfig
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_ConfigChannelSoftwareTCD
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_SetTransferConfig
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_TcdReset
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_ResetChannel
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_InitChannel
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
</UL>

<P><STRONG><a name="[1c1]"></a>color_trace</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, color_tracer.o(.text.color_trace))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = color_trace &rArr; searchcentre
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;corrode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchcentre
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c4]"></a>debug_uart_init</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, zf_board_init.o(.text.debug_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = debug_uart_init &rArr; LPUART_Init &rArr; LP_FLEXCOMM_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_EnableInterrupts
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetLPFlexCommClkFreq
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
</UL>

<P><STRONG><a name="[1bb]"></a>ezh_camera_display_callback</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, zf_driver_ezh.o(.text.ezh_camera_display_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ezh_camera_display_callback &rArr; ezh_copy_slice_to_model_input &rArr; rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char) &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_copy_slice_to_model_input
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_Boot
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLU_DriverIRQHandler
</UL>

<P><STRONG><a name="[1c6]"></a>ezh_copy_slice_to_model_input</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, zf_model_process.o(.text.ezh_copy_slice_to_model_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ezh_copy_slice_to_model_input &rArr; rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char) &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb565stridedtorgb888(unsigned short const*, int, int, int, int, int, unsigned char*, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_camera_display_callback
</UL>

<P><STRONG><a name="[1c8]"></a>ezh_start</STRONG> (Thumb, 392 bytes, Stack size 16 bytes, zf_driver_ezh.o(.text.ezh_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ezh_start &rArr; SMARTDMA_Init &rArr; RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_Boot
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_InstallCallback
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMARTDMA_Init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUTMUX_Deinit
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUTMUX_AttachSignal
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUTMUX_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
</UL>

<P><STRONG><a name="[1cc]"></a>float_to_str</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, zf_board_init.o(.text.float_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = float_to_str &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
</UL>

<P><STRONG><a name="[1d9]"></a>gpio_get_level</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.gpio_get_level))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cd]"></a>gpio_init</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, zf_driver_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gpio_init &rArr; GPIO_PinInit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d1]"></a>gpio_set_level</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.gpio_set_level))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_set_region
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a0]"></a>gpio_toggle_level</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.gpio_toggle_level))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[1ec]"></a>int_to_str</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, zf_board_init.o(.text.int_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = int_to_str
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
</UL>

<P><STRONG><a name="[1ce]"></a>ips200_draw_line</STRONG> (Thumb, 528 bytes, Stack size 64 bytes, zf_device_ips200.o(.text.ips200_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = ips200_draw_line &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d0]"></a>ips200_init</STRONG> (Thumb, 3672 bytes, Stack size 760 bytes, zf_device_ips200.o(.text.ips200_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = ips200_init &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferCreateHandleEDMA
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_CreateHandle
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterGetDefaultConfig
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDMA_GetDefaultConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_set_region
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetLPFlexCommClkFreq
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d2]"></a>ips200_show_scc8660</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, zf_device_ips200.o(.text.ips200_show_scc8660))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = ips200_show_scc8660 &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[159]"></a>main</STRONG> (Thumb, 768 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = main &rArr; ips200_init &rArr; ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_draw_line
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_trace
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_color_target_condi
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_show_scc8660
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_uniform_brightness
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_uart_init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1d5]"></a>scc8660_init</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, zf_device_scc8660.o(.text.scc8660_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = scc8660_init &rArr; zf_debug_printf &rArr; LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ezh_start
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_config_sccb
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e0]"></a>scc8660_set_brightness_sccb</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, zf_device_config.o(.text.scc8660_set_brightness_sccb))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = scc8660_set_brightness_sccb &rArr; soft_iic_sccb_read_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_uniform_brightness
</UL>

<P><STRONG><a name="[1df]"></a>scc8660_set_config_sccb</STRONG> (Thumb, 5844 bytes, Stack size 40 bytes, zf_device_config.o(.text.scc8660_set_config_sccb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = scc8660_set_config_sccb &rArr; soft_iic_sccb_read_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
</UL>

<P><STRONG><a name="[1e3]"></a>scc8660_set_reg_sccb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, zf_device_config.o(.text.scc8660_set_reg_sccb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = scc8660_set_reg_sccb &rArr; soft_iic_sccb_write_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_uniform_brightness
</UL>

<P><STRONG><a name="[1d6]"></a>scc8660_set_uniform_brightness</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, zf_device_scc8660.o(.text.scc8660_set_uniform_brightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = scc8660_set_uniform_brightness &rArr; scc8660_set_brightness_sccb &rArr; soft_iic_sccb_read_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_reg_sccb
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_brightness_sccb
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1da]"></a>set_color_target_condi</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, color_tracer.o(.text.set_color_target_condi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_color_target_condi
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1de]"></a>soft_iic_init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = soft_iic_init &rArr; gpio_init &rArr; GPIO_PinInit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
</UL>

<P><STRONG><a name="[1e2]"></a>soft_iic_sccb_read_register</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, zf_driver_soft_iic.o(.text.soft_iic_sccb_read_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = soft_iic_sccb_read_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_config_sccb
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_brightness_sccb
</UL>

<P><STRONG><a name="[1e1]"></a>soft_iic_sccb_write_register</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, zf_driver_soft_iic.o(.text.soft_iic_sccb_write_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = soft_iic_sccb_write_register &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_config_sccb
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_reg_sccb
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_brightness_sccb
</UL>

<P><STRONG><a name="[1e8]"></a>system_delay_init</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, zf_driver_delay.o(.text.system_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = system_delay_init &rArr; LPTMR_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_Deinit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_GetDefaultConfig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetupClk16KClocking
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_board_init
</UL>

<P><STRONG><a name="[1a1]"></a>system_delay_ms</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, zf_driver_delay.o(.text.system_delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_set_config_sccb
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d4]"></a>user_uart_init</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, zf_driver_uart.o(.text.user_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = user_uart_init &rArr; LPUART_Init &rArr; LP_FLEXCOMM_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_EnableInterrupts
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Deinit
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetLPFlexCommClkFreq
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d3]"></a>zf_board_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, zf_board_init.o(.text.zf_board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = zf_board_init &rArr; debug_uart_init &rArr; LPUART_Init &rArr; LP_FLEXCOMM_Init &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_PowerMode_OD
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d7]"></a>zf_debug_printf</STRONG> (Thumb, 534 bytes, Stack size 128 bytes, zf_board_init.o(.text.zf_debug_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = zf_debug_printf &rArr; LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_uart_callback
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc8660_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b8]"></a>zf_debug_uart_callback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text.zf_debug_uart_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = zf_debug_uart_callback &rArr; zf_debug_printf &rArr; LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LP_FLEXCOMM4_IRQHandler
</UL>

<P><STRONG><a name="[1d8]"></a>zf_user_printf</STRONG> (Thumb, 384 bytes, Stack size 112 bytes, zf_driver_uart.o(.text.zf_user_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = zf_user_printf &rArr; LPUART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_str
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_uart_callback
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1eb]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f_clz.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_user_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_debug_printf
</UL>

<P><STRONG><a name="[1ed]"></a>_d2f</STRONG> (Thumb, 700 bytes, Stack size 32 bytes, d2f_clz.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1f8]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[1dc]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv_clz.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f3]"></a>_ddiv</STRONG> (Thumb, 748 bytes, Stack size 32 bytes, ddiv_clz.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_drenorm2
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[241]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)

<P><STRONG><a name="[1f7]"></a>_dcmpeq</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dneq
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deq
</UL>

<P><STRONG><a name="[1db]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[242]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[243]"></a>__aeabi_cdcmpge</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)

<P><STRONG><a name="[1f9]"></a>_dcmpge</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
</UL>

<P><STRONG><a name="[244]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[1fa]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[245]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[1f0]"></a>__fpl_dnaninf</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dunder_d
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[1f5]"></a>__fpl_drenorm2</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, drenorm_clz.o(x$fpl$drenorm), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1fc]"></a>__fpl_drenorm1</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, drenorm_clz.o(x$fpl$drenorm), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dunder_d
</UL>

<P><STRONG><a name="[1f6]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1f4]"></a>__dunder</STRONG> (Thumb, 314 bytes, Stack size 4 bytes, dunder_clz.o(x$fpl$dunder), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1fb]"></a>__dunder_d</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dunder_clz.o(x$fpl$dunder), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_drenorm1
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1ee]"></a>__fpl_exception</STRONG> (Thumb, 454 bytes, Stack size 16 bytes, except.o(x$fpl$exception), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_f
</UL>

<P><STRONG><a name="[246]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[1fe]"></a>_deq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[1ff]"></a>_dneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[247]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[200]"></a>_dgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[248]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[201]"></a>_dgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[1dd]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[202]"></a>_dleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[249]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[203]"></a>_dls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[204]"></a>__fpl_fnaninf</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__funder_d
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_f
</UL>

<P><STRONG><a name="[150]"></a>_fp_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[24a]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[24b]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1ef]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[1f2]"></a>__funder</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, funder_clz.o(x$fpl$funder), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[205]"></a>__funder_d</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, funder_clz.o(x$fpl$funder), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_f2ulz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixull.o(x$fpl$llufromf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPll1OutFreq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPll0OutFreq
</UL>

<P><STRONG><a name="[206]"></a>_ll_ufrom_f</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ffixull.o(x$fpl$llufromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL>

<P><STRONG><a name="[1fd]"></a>__fpl_return_NaN</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL>

<P><STRONG><a name="[1f1]"></a>_fp_trapveneer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, trapv.o(x$fpl$trapveneer), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_trap
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__funder_d
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dunder_d
</UL>

<P><STRONG><a name="[207]"></a>__fpl_cmpreturn</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[14a]"></a>_GLOBAL__sub_I_zf_model_process.cpp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_model_process.o(.text._GLOBAL__sub_I_zf_model_process.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GLOBAL__sub_I_zf_model_process.cpp &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_model_process.o(.init_array)
</UL>
<P><STRONG><a name="[1c2]"></a>searchcentre</STRONG> (Thumb, 646 bytes, Stack size 112 bytes, color_tracer.o(.text.searchcentre))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = searchcentre
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_trace
</UL>

<P><STRONG><a name="[1c3]"></a>corrode</STRONG> (Thumb, 1392 bytes, Stack size 60 bytes, color_tracer.o(.text.corrode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = corrode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_trace
</UL>

<P><STRONG><a name="[1e5]"></a>soft_iic_start</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = soft_iic_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
</UL>

<P><STRONG><a name="[1e6]"></a>soft_iic_send_data</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = soft_iic_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
</UL>

<P><STRONG><a name="[1e7]"></a>soft_iic_stop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = soft_iic_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_write_register
</UL>

<P><STRONG><a name="[1e4]"></a>soft_iic_read_data</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = soft_iic_read_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_sccb_read_register
</UL>

<P><STRONG><a name="[1cf]"></a>ips200_set_region</STRONG> (Thumb, 488 bytes, Stack size 48 bytes, zf_device_ips200.o(.text.ips200_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ips200_set_region &rArr; LPSPI_MasterTransferEDMA &rArr; LPSPI_MasterTransferEDMALite &rArr; EDMA_TcdSetTransferConfig &rArr; EDMA_ConfigChannelSoftwareTCD &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI_MasterTransferEDMA
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_draw_line
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_show_scc8660
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[19c]"></a>HAL_GpioInterruptHandle</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, fsl_adapter_gpio.o(.text.HAL_GpioInterruptHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GpioInterruptHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GpioClearInterruptFlags
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GpioGetInterruptFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO51_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO50_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO41_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO40_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO31_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO30_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO21_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO01_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO00_IRQHandler
</UL>

<P><STRONG><a name="[146]"></a>EDMA_LpspiMasterCallback</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, fsl_lpspi_edma.o(.text.EDMA_LpspiMasterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = EDMA_LpspiMasterCallback &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_lpspi_edma.o(.text.LPSPI_MasterTransferEDMALite)
</UL>
<P><STRONG><a name="[148]"></a>ezh_camera_callback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_driver_ezh.o(.text.ezh_camera_callback))
<BR>[Address Reference Count : 1]<UL><LI> zf_driver_ezh.o(.text.ezh_start)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
